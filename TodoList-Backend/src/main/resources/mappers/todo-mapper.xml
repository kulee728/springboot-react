<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="todo.mapper.TodoMapper">
	<select id="idCheck">
		SELECT COUNT(*) FROM TODO_MEMBER WHERE ID = #{id}
	</select>
	
	<insert id="signup">
		INSERT INTO TODO_MEMBER
		VALUES(SEQ_TODO_MEMBER_NO.NEXTVAL,#{id},#{pw},#{name})
	</insert>
	
	<select id="login">
		SELECT * FROM TODO_MEMBER
		WHERE ID = #{id}
		AND PW = #{pw}
	</select>

	<!-- update ; todoNo와 isDone 여부를 넘겨주고 update 해준다. -->
	<update id="todoUpdate">
		UPDATE TODO
		SET IS_DONE = #{isDone}
		WHERE TODO_NO = ${todoNo}
	</update>
	
	<delete id="todoDelete">
		DELETE FROM TODO
		WHERE TODO_NO = ${todoNo}
	</delete>
	
	
	<!-- 할 일을 추가하는 insert. insert의 특정 값을 DB에 넣기 전에 미리 확인한다.
		useGeneratedKeys : 자동으로 생성된 키를 사용한다는 뜻
		selectKey order="BEFORE" : INSERT 문 실행 전에 실행할 쿼리
		resultType "_int" = resultType int 랑 똑같다.
		
		시퀀스 관리 : 시퀀스에 다수가 동시에 접속하여 회원가입을 동시에 진행할 때
		각 고객이 해당 시퀀스 번호를 사용해도 되는지 유무를 확인 한 다음 insert 를 진행한다. 
		
		VALUES에 적힌 달러('$')는 뭡니까
		  # : 매핑된 객체(DTO) 에서 title 속성을 가져옴
		  default : DB설정 기본 값 사용
		  ${} : selectLey에서 선택된 todoNo 값을 사용
		  
		  #{} 와 ${} 의 차이.
		  #{} : 사용자 입력값의 안전한 처리, 동적 쿼리 사용 X (SQL injection 공격 방지)
		  ${} : 동적 테이블, 칼럼 명을 사용. SQL 특정 구문을 동적으로 변경해야 하는 경우.
		  입력한 값이 신뢰할 수 있을때.
	 -->
	<insert id="todoInsert" useGeneratedKeys="true">
		<selectKey order="BEFORE" keyProperty="todoNo" resultType="_int">
			SELECT SEQ_TODO_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO TODO
		VALUES(${todoNo},#{title},default,#{todoMemberNo})
	</insert>
	
	<select id="selectTodoList">
			SELECT * FROM TODO
			WHERE TODO_MEMBER_NO = #{todoMemberNo}
			ORDER BY 1
	</select>
</mapper>

